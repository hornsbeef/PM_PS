
Output generated by class Test + explanation added.
--- 1 ---// B object1 = new C(); -> object1 has: static type B; dynamic typ C;
        //object1.print(new A()); -> in Class B we look for print(that takes A) -> there is one
C 1     //then due to dynamic type C -> look if this function has been overwritten in class C -> public void print(A a) {System.out.println("C 1");}
C 2     //((C) object1).print(new B()); due to cast look directly in class C -> public void print(B b) {System.out.println("C 2");}
        //
--- 2 ---       //
        //A object2 = new B()   -> object 2: static A; dynamc B;
B 1     //((B) object2).print(new A()); -> due to cast -> in class B -> public void print(A a) {System.out.println("B 1");}
B 1     //object2.print(new C()); -> object 2: static type A -> uses print(A a) from class A ->
        //due to dynamic type B the function print(A a) from class B is used
--- 3 ---       //
        //A object3 = new C(); -> object3 has dynamic type C;
C 1     //object3.print(new C()); ->
C 1     //object3.print(new A()); ->
C 1     //object3.print(new B()); ->
C 2     //
C 3     //
        //
--- 4 ---       //
        //
C 3     //
C 1     //
C 2     //
        //
--- 5 ---       //
        //
B 2     //
B 2     //
B 1     //
        //
--- 6 ---       //
        //
C 2     //
C 1     //
C 2     //
        //
--- 7 ---       //
        //
A 1     //
        //
--- 8 ---       //
        //
B 1     //
B 1     //